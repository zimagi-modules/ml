data_mixins:
  model_training:
    class: ModelTrainingMixin
    fields:
      training:
        type: "@django.ForeignKey"
        relation: model_training
        options:
          "null": true
          on_delete: "@django.CASCADE"
          editable: false

  model_trainings:
    class: ModelTrainingRelationMixin
    fields:
      trainings:
        type: "@django.ManyToManyField"
        relation: model_training

data_base:
  model_training:
    class: ModelTrainingBase
    base: resource
    mixins: [model_training]
    id_fields: [training_id, name]
    meta:
      unique_together: [training, name]
      scope: training

data:
  model_training:
    class: ModelTraining
    base: model_config
    mixins: [engine, data_sources]
    id_fields: [config_id, time]
    key: time
    roles:
      edit: [scheduler, predicter]
      view: [scheduler, predicter]
    fields:
      name: null
      time:
        type: "@django.DateTimeField"
        options:
          "null": false
      # A plausible use case is simply not to store the training model BLOB
      # if the corresponding metrics show it to be bad enough not to retain
      trained_model:
        type: "@django.BinaryField"
        options:
          "null": true
      duration:
        type: "@django.FloatField"
        options:
          "null": true
      cost:
        type: "@django.FloatField"
        options:
          "null": true
      # Leave room for ad hoc details
      details:
        type: "@django.TextField"
        options:
          "null": true
    meta:
      unique_together: [config, time]
      ordering_fields: [time]
      ordering: [-time]
      search_fields: [time]

command_mixins:
  model_training:
    class: ModelTrainingMixin
    mixins: [model_config, engine, data_source]
    meta:
      model_training:
        data: model_training
        priority: 3

command_base:
  model_training:
    mixins: [model_training]
    server_enabled: true
    groups_allowed: [scheduler, predicter]

command:
  model:
    training:
      resource: model_training
      base: model_training
      base_name: model_training
      priority: 140
